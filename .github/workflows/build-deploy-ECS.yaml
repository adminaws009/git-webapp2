name: Deploy-to-ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code (clone repo)
        uses: actions/checkout@v2

      - name: install Java and setup Maven
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: '11'

      - name: SonarQube analysis
        run: mvn sonar:sonar -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY}} -Dsonar.host.url=${{secrets.SONAR_HOST_URL}} -Dsonar.login=${{secrets.SONAR_LOGIN_TOKEN}}

      - name: Maven build
        run: mvn clean package

      - name: Upload to artifact repo
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Copy artifact to S3
        run: aws s3 cp target/*.war s3://artifact-repo-charlo


      - name: Login to Amazon ECR
        id: login-ecr
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t class-webapp-java:latest .
          docker tag class-webapp-java:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/contianers:latest
      - name: Push image to Amazon ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/contianers:latest



